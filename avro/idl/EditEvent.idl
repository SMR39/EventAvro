@namespace("org.wikimedia.mediawiki")
protocol EditEvent {
    import idl "Event.idl";
    import idl "Page.idl";
    import idl "User.idl";

    /**
        The actions involved in an attempt to edit a page.
        init: Initiation of the editor
        ready: Editor is initialised and ready for user input \u2013 'cursor blinking'
        saveIntent: Editor pre-save button (if available) has been activated, showing user intent to save (regardless of whether they continue)
        saveAttempt: Editor save button has been activated, showing user attempt to save (regardless of success)
        saveSuccess: Editor has successfully saved and user has been shown a post-edit status on the client-side
        saveFailure: Editor has not successfully saved and user has been shown a save failure reason on the client-side
        abort: Editor has been aborted by user action
    */
    enum EditAction {
         init,
         ready,
         saveIntent,
         saveAttempt,
         saveSuccess,
         saveFailure,
         abort
    }

    enum EditActionInitType {
        page,
        section
    }

    enum EditActionMechanism {
        click,
        new,
        url
    }

    enum EditActionSaveFailureType {
        userBadToken,
        userNewUser,
        extensionAbuseFilter,
        extensionCaptcha,
        extensionSpamBlacklist,
        extensionTitleBlacklist,
        responseEmpty,
        responseUnknown,
        editPageDeleted,
        editConflict
    }

    enum EditActionAbortType {
        preinit,
        nochange,
        switchwith,
        switchwithout,
        abandon,
        abandonMidsave
    }

    enum EditActionAbortMechanism {
        cancel,
        navigate,
        navigate_back,
        navigate_read
    }

    enum Editor {
        visualeditor,
        wikitext,
        other
    }

    /** Represents an edit event. */
    record EditEvent {
        org.wikimedia.analytics.EventMeta meta;

        EditAction action;

        union { null, EditActionInitType } action_init_type;
        union { null, EditActionMechanism } action_init_mechanism;
        union { null, int } action_ready_timing;
        union { null, int } action_save_intent_timing;
        union { null, int } action_save_attempt_timing;
        union { null, int } action_save_success_timing;

        union { null, EditActionSaveFailureType } action_save_failure_type;
        union { null, string } action_save_failure_message;
        union { null, int } action_save_failure_timing;

        union { null, EditActionAbortType } action_abort_type;
        union { null, EditActionAbortMechanism } action_abort_mechanism;
        union { null, int } action_abort_timing;

        string mediawiki_version;
        union { null, Page } page;

        string editing_session_id;

        User user;
    }

}
